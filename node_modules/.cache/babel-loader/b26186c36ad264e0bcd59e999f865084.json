{"ast":null,"code":"var _jsxFileName = \"/Users/ankitjaiswal/Desktop/Aliment-www/src/components/userprofile/resetpassword/resetpassword.js\";\nimport React, { Component } from 'react';\nimport './resetpassword.css';\nimport { connect } from 'react-redux';\nimport { resetpassword, resetpasswordwithcode } from '../../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Resetpassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      resetcodesent: false,\n      usercode: '',\n      newpassword: '',\n      confirmnewpassword: ''\n    };\n\n    this.resetpasswordsubmit = event => {\n      event.preventDefault();\n\n      if (this.state.email === '') {\n        alert('Please enter an email');\n      } else if (!this.state.email.includes('@') || !this.state.email.includes('.com')) {\n        alert('Please enter valid email');\n      } else {\n        this.props.resetpassword(this.state.email);\n      }\n    };\n\n    this.codesubmit = event => {\n      event.preventDefault();\n\n      if (this.state.usercode === '' || this.state.newpassword === '' || this.state.confirmnewpassword === '') {\n        alert('Please fill the form complete.');\n      } else if (this.state.newpassword != this.state.confirmnewpassword) {\n        alert('Password do not match');\n      } else {\n        this.props.resetpasswordwithcode(this.state.usercode, this.state.newpassword, this.state.email);\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user) {\n      if (!this.state.resetcodesent) {\n        if (nextProps.user.codeadded) {\n          alert('A code has been sent to your Email. Use the code to reset your password');\n          this.setState({\n            resetcodesent: true\n          });\n        } else {\n          alert(`Something went wrong. ${nextProps.codeadded.message}`);\n        }\n      } else {\n        if (nextProps.user.passwordupdated) {\n          if (nextProps.user.passwordupdated.passwordupdate) {\n            alert('Password Successfully Changed');\n            window.location.href = '/signin';\n          } else {\n            alert(`Something went wrong. ${nextProps.user.passwordupdated.message}`);\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    return !this.state.resetcodesent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetpasswordpage\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"resetpasswordform\",\n        onSubmit: event => this.resetpasswordsubmit(event),\n        \"data-aos\": \"zoom-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signinalimentoinreset\",\n          children: \"Alimente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: event => this.setState({\n              email: event.target.value\n            }),\n            placeholder: \"Enter Email\",\n            className: \"resetemail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"resetpasswordbutton\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetpasswordpage\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"resetpasswordform codeform\",\n        onSubmit: event => this.codesubmit(event),\n        \"data-aos\": \"zoom-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signinalimentoinreset codealimente\",\n          children: \"Alimente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.usercode,\n            onChange: event => this.setState({\n              usercode: event.target.value\n            }),\n            placeholder: \"Enter Your Code\",\n            className: \"resetemail codeusercode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: event => this.setState({\n              newpassword: event.target.value\n            }),\n            placeholder: \"Enter New Password\",\n            className: \"resetemail codenewpass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: event => this.setState({\n              confirmnewpassword: event.target.value\n            }),\n            placeholder: \"Confirm New Password\",\n            className: \"resetemail codeconfirmpass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"resetpasswordbutton codesubmit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProrps = state => {\n  return {\n    user: state.user_reducer\n  };\n};\n\nexport default connect(mapStateToProrps, {\n  resetpassword,\n  resetpasswordwithcode\n})(Resetpassword);","map":{"version":3,"sources":["/Users/ankitjaiswal/Desktop/Aliment-www/src/components/userprofile/resetpassword/resetpassword.js"],"names":["React","Component","connect","resetpassword","resetpasswordwithcode","Resetpassword","state","email","resetcodesent","usercode","newpassword","confirmnewpassword","resetpasswordsubmit","event","preventDefault","alert","includes","props","codesubmit","componentWillReceiveProps","nextProps","user","codeadded","setState","message","passwordupdated","passwordupdate","window","location","href","render","target","value","mapStateToProrps","user_reducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAuBC,qBAAvB,QAAmD,kBAAnD;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAqC;AAAA;AAAA;AAAA,SACjCK,KADiC,GAC3B;AACFC,MAAAA,KAAK,EAAG,EADN;AAEFC,MAAAA,aAAa,EAAG,KAFd;AAGFC,MAAAA,QAAQ,EAAG,EAHT;AAIFC,MAAAA,WAAW,EAAG,EAJZ;AAKFC,MAAAA,kBAAkB,EAAG;AALnB,KAD2B;;AAAA,SA+BjCC,mBA/BiC,GA+BVC,KAAD,IAAU;AAC5BA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAG,KAAKR,KAAL,CAAWC,KAAX,KAAqB,EAAxB,EAA2B;AACvBQ,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,OAFD,MAEM,IAAG,CAAC,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,QAAjB,CAA0B,GAA1B,CAAD,IAAmC,CAAC,KAAKV,KAAL,CAAWC,KAAX,CAAiBS,QAAjB,CAA0B,MAA1B,CAAvC,EAAyE;AAC3ED,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACH,OAFK,MAED;AACD,aAAKE,KAAL,CAAWd,aAAX,CAAyB,KAAKG,KAAL,CAAWC,KAApC;AACH;AACJ,KAxCgC;;AAAA,SAyCjCW,UAzCiC,GAyCnBL,KAAD,IAAU;AACnBA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAG,KAAKR,KAAL,CAAWG,QAAX,KAAwB,EAAxB,IACC,KAAKH,KAAL,CAAWI,WAAX,KAA2B,EAD5B,IAEC,KAAKJ,KAAL,CAAWK,kBAAX,KAAkC,EAFtC,EAGC;AACGI,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACH,OALD,MAKM,IAAG,KAAKT,KAAL,CAAWI,WAAX,IAA0B,KAAKJ,KAAL,CAAWK,kBAAxC,EAA2D;AAC7DI,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,OAFK,MAED;AACD,aAAKE,KAAL,CAAWb,qBAAX,CAAiC,KAAKE,KAAL,CAAWG,QAA5C,EAAsD,KAAKH,KAAL,CAAWI,WAAjE,EAA8E,KAAKJ,KAAL,CAAWC,KAAzF;AACH;AACJ,KArDgC;AAAA;;AAQjCY,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,QAAGA,SAAS,CAACC,IAAb,EAAkB;AACd,UAAG,CAAC,KAAKf,KAAL,CAAWE,aAAf,EAA6B;AACzB,YAAGY,SAAS,CAACC,IAAV,CAAeC,SAAlB,EAA4B;AACxBP,UAAAA,KAAK,CAAC,yEAAD,CAAL;AACA,eAAKQ,QAAL,CAAc;AACVf,YAAAA,aAAa,EAAG;AADN,WAAd;AAGH,SALD,MAKK;AACDO,UAAAA,KAAK,CAAE,yBAAwBK,SAAS,CAACE,SAAV,CAAoBE,OAAQ,EAAtD,CAAL;AACH;AACJ,OATD,MASK;AACD,YAAGJ,SAAS,CAACC,IAAV,CAAeI,eAAlB,EAAkC;AAC9B,cAAGL,SAAS,CAACC,IAAV,CAAeI,eAAf,CAA+BC,cAAlC,EAAiD;AAC7CX,YAAAA,KAAK,CAAC,+BAAD,CAAL;AACAY,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACH,WAHD,MAGK;AACDd,YAAAA,KAAK,CAAE,yBAAwBK,SAAS,CAACC,IAAV,CAAeI,eAAf,CAA+BD,OAAQ,EAAjE,CAAL;AACH;AACJ;AACJ;AACJ;AACJ;;AAwBDM,EAAAA,MAAM,GAAE;AACJ,WACI,CAAC,KAAKxB,KAAL,CAAWE,aAAZ,gBACA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAoC,QAAA,QAAQ,EAAGK,KAAD,IAAS,KAAKD,mBAAL,CAAyBC,KAAzB,CAAvD;AAAwF,oBAAS,SAAjG;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGA,KAAD,IAAS,KAAKU,QAAL,CAAc;AAAChB,cAAAA,KAAK,EAAEM,KAAK,CAACkB,MAAN,CAAaC;AAArB,aAAd,CAAtC;AAAkF,YAAA,WAAW,EAAC,aAA9F;AAA4G,YAAA,SAAS,EAAC;AAAtH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,gBAWA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,4BAAhB;AAA6C,QAAA,QAAQ,EAAGnB,KAAD,IAAS,KAAKK,UAAL,CAAgBL,KAAhB,CAAhE;AAAwF,oBAAS,SAAjG;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAE,KAAKP,KAAL,CAAWG,QAArC;AAA+C,YAAA,QAAQ,EAAGI,KAAD,IAAS,KAAKU,QAAL,CAAc;AAACd,cAAAA,QAAQ,EAAEI,KAAK,CAACkB,MAAN,CAAaC;AAAxB,aAAd,CAAlE;AAAiH,YAAA,WAAW,EAAC,iBAA7H;AAA+I,YAAA,SAAS,EAAC;AAAzJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,QAAQ,EAAGnB,KAAD,IAAS,KAAKU,QAAL,CAAc;AAACb,cAAAA,WAAW,EAAEG,KAAK,CAACkB,MAAN,CAAaC;AAA3B,aAAd,CAA1C;AAA4F,YAAA,WAAW,EAAC,oBAAxG;AAA6H,YAAA,SAAS,EAAC;AAAvI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,QAAQ,EAAGnB,KAAD,IAAS,KAAKU,QAAL,CAAc;AAACZ,cAAAA,kBAAkB,EAAEE,KAAK,CAACkB,MAAN,CAAaC;AAAlC,aAAd,CAA1C;AAAmG,YAAA,WAAW,EAAC,sBAA/G;AAAsI,YAAA,SAAS,EAAC;AAAhJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAWI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,gCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AA4BH;;AAnFgC;;AAqFrC,MAAMC,gBAAgB,GAAI3B,KAAD,IAAU;AAC/B,SAAM;AACFe,IAAAA,IAAI,EAAGf,KAAK,CAAC4B;AADX,GAAN;AAGH,CAJD;;AAKA,eAAehC,OAAO,CAAC+B,gBAAD,EAAkB;AAAC9B,EAAAA,aAAD;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAgEC,aAAhE,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './resetpassword.css';\nimport {connect} from 'react-redux';\nimport {resetpassword, resetpasswordwithcode} from '../../../actions';\n\nclass Resetpassword extends Component{\n    state={\n        email : '',\n        resetcodesent : false,\n        usercode : '',\n        newpassword : '',\n        confirmnewpassword : ''\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.user){\n            if(!this.state.resetcodesent){\n                if(nextProps.user.codeadded){\n                    alert('A code has been sent to your Email. Use the code to reset your password')\n                    this.setState({\n                        resetcodesent : true\n                    })\n                }else{\n                    alert(`Something went wrong. ${nextProps.codeadded.message}`)\n                }\n            }else{\n                if(nextProps.user.passwordupdated){\n                    if(nextProps.user.passwordupdated.passwordupdate){\n                        alert('Password Successfully Changed')\n                        window.location.href = '/signin'\n                    }else{\n                        alert(`Something went wrong. ${nextProps.user.passwordupdated.message}`)\n                    }\n                }\n            }\n        }\n    }\n    resetpasswordsubmit = (event) =>{\n        event.preventDefault()\n        if(this.state.email === ''){\n            alert('Please enter an email')\n        }else if(!this.state.email.includes('@') || !this.state.email.includes('.com')){\n            alert('Please enter valid email')\n        }else{\n            this.props.resetpassword(this.state.email)\n        }\n    }\n    codesubmit = (event) =>{\n        event.preventDefault()\n        if(this.state.usercode === '' ||\n            this.state.newpassword === '' ||\n            this.state.confirmnewpassword === ''\n        ){\n            alert('Please fill the form complete.')\n        }else if(this.state.newpassword != this.state.confirmnewpassword){\n            alert('Password do not match')\n        }else{\n            this.props.resetpasswordwithcode(this.state.usercode, this.state.newpassword, this.state.email)\n        }\n    }\n    render(){ \n        return(\n            !this.state.resetcodesent ?\n            <div className='resetpasswordpage'>\n                <form className='resetpasswordform' onSubmit={(event)=>this.resetpasswordsubmit(event)} data-aos='zoom-in'>\n                    <p className='signinalimentoinreset'>Alimente</p>\n                    <div>\n                        <input type='text' onChange={(event)=>this.setState({email :event.target.value})} placeholder='Enter Email' className='resetemail'/>\n                    </div>\n                    <button type='submit' className='resetpasswordbutton'>Submit</button>\n                </form>     \n            </div>\n            :\n            <div className='resetpasswordpage'>\n                <form className='resetpasswordform codeform' onSubmit={(event)=>this.codesubmit(event)} data-aos='zoom-in'>\n                    <p className='signinalimentoinreset codealimente'>Alimente</p>\n                    <div>\n                        <input type='text' value={this.state.usercode} onChange={(event)=>this.setState({usercode :event.target.value})} placeholder='Enter Your Code' className='resetemail codeusercode'/>\n                    </div>\n                    <div>\n                        <input type='password' onChange={(event)=>this.setState({newpassword :event.target.value})} placeholder='Enter New Password' className='resetemail codenewpass'/>\n                    </div>\n                    <div>\n                        <input type='password' onChange={(event)=>this.setState({confirmnewpassword :event.target.value})} placeholder='Confirm New Password' className='resetemail codeconfirmpass'/>\n                    </div>\n                    <button type='submit' className='resetpasswordbutton codesubmit'>Submit</button>\n                </form>     \n            </div>\n        )\n    }\n}\nconst mapStateToProrps = (state) =>{\n    return{\n        user : state.user_reducer\n    }\n}\nexport default connect(mapStateToProrps,{resetpassword,resetpasswordwithcode})(Resetpassword);"]},"metadata":{},"sourceType":"module"}