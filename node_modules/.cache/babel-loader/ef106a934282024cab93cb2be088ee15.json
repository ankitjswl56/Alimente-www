{"ast":null,"code":"import axios from 'axios';\nconst http = axios.create({\n  baseURL: 'https://alimente-data.herokuapp.com/'\n});\nexport const fetchmenu = () => {\n  return async function (dispatch) {\n    const response = await http.get('/api/menu');\n    dispatch({\n      type: 'FETCH_MENU',\n      payload: response.data\n    });\n  };\n};\nexport const fetchuserprofile = () => {\n  return async function (dispatch) {\n    const response = await http.get('/api/userprofile');\n    dispatch({\n      type: 'FETCH_USERPROFILE',\n      payload: response.data\n    });\n  };\n};\nexport const signinuser = (email, password) => {\n  return async function (dispatch) {\n    const response = await http.post('/api/userlogin', {\n      email,\n      password\n    });\n    dispatch({\n      type: 'USER_LOGIN',\n      payload: response.data\n    });\n  };\n};\nexport const checkisauth = () => {\n  return async function (dispatch) {\n    const response = await http.get('/api/isauth');\n    dispatch({\n      type: 'CHECK_ISAUTH',\n      payload: response.data\n    });\n  };\n};\nexport const signupuser = (name, email, password, phonenumber) => {\n  return async function (dispatch) {\n    const response = await http.post('/api/usersignup', {\n      name,\n      email,\n      password,\n      phonenumber\n    });\n    dispatch({\n      type: 'USER_SIGNUP',\n      payload: response.data\n    });\n  };\n};\nexport const logoutuser = () => {\n  return async function (dispatch) {\n    const response = await http.get('/api/logout');\n    dispatch({\n      type: 'USER_LOGOUT',\n      payload: response.data\n    });\n  };\n};\nexport const contactusform = (firstname, lastname, email, phonenumber, message) => {\n  return async function (dispatch) {\n    const response = await http.post('/api/contactusform', {\n      firstname,\n      lastname,\n      email,\n      phonenumber,\n      message\n    });\n    dispatch({\n      type: 'CONTACTUS_FORM',\n      payload: response.data\n    });\n  };\n};\nexport const cartorder = (userid, useremail, fooddetail, totalprice) => {\n  return async function (dispatch) {\n    const response = await http.post('/api/usercart', {\n      userid,\n      useremail,\n      fooddetail,\n      totalprice\n    });\n    dispatch({\n      type: 'ORDER_CONFIRM',\n      payload: response.data\n    });\n  };\n};\nexport const fetchorders = userid => {\n  return async function (dispatch) {\n    const response = await http.get('/api/cart', {\n      userid\n    });\n    dispatch({\n      type: 'FETCH_ORDERS',\n      payload: response.data\n    });\n  };\n};\nexport const picclicked = picname => {\n  return {\n    type: 'PIC_CLICKED',\n    payload: picname\n  };\n};\nexport const changepassword = (oldpassword, newpassword) => {\n  return async function (dispatch) {\n    const response = await http.post('/api/changepassword', {\n      oldpassword,\n      newpassword\n    });\n    dispatch({\n      type: 'CHANGE_PASSWORD',\n      payload: response.data\n    });\n  };\n};\nexport const editdetails = (phone, address) => {\n  return async function (dispatch) {\n    const response = await http.post('/api/editdetails', {\n      phone,\n      address\n    });\n    dispatch({\n      type: 'EDIT_DETAILS',\n      payload: response.data\n    });\n  };\n};\nexport const resetpassword = email => {\n  return async function (dispatch) {\n    const response = await http.post('/api/resetpassword', {\n      email\n    });\n    dispatch({\n      type: 'RESET_PASSWORD',\n      payload: response.data\n    });\n  };\n};\nexport const resetpasswordwithcode = (code, password, email) => {\n  return async function (dispatch) {\n    const response = await http.post('/api/resetpasswordwithcode', {\n      code,\n      password,\n      email\n    });\n    dispatch({\n      type: 'RESET_PASSWORD_WITHCODE',\n      payload: response.data\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ankitjaiswal/Desktop/Aliment-www/src/actions/index.js"],"names":["axios","http","create","baseURL","fetchmenu","dispatch","response","get","type","payload","data","fetchuserprofile","signinuser","email","password","post","checkisauth","signupuser","name","phonenumber","logoutuser","contactusform","firstname","lastname","message","cartorder","userid","useremail","fooddetail","totalprice","fetchorders","picclicked","picname","changepassword","oldpassword","newpassword","editdetails","phone","address","resetpassword","resetpasswordwithcode","code"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE;AADa,CAAb,CAAb;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAK;AAC1B,SAAO,gBAAeC,QAAf,EAAwB;AAC3B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAAS,WAAT,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,YADF;AAELC,MAAAA,OAAO,EAAGH,QAAQ,CAACI;AAFd,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMC,gBAAgB,GAAG,MAAK;AACjC,SAAO,gBAAgBN,QAAhB,EAAyB;AAC5B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAAS,kBAAT,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,mBADF;AAELC,MAAAA,OAAO,EAAGH,QAAQ,CAACI;AAFd,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AASP,OAAO,MAAME,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AAC1C,SAAO,gBAAiBT,QAAjB,EAA0B;AAC7B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACc,IAAL,CAAU,gBAAV,EAA2B;AAACF,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA3B,CAAvB;AACAT,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,YADF;AAELC,MAAAA,OAAO,EAAGH,QAAQ,CAACI;AAFd,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AASP,OAAO,MAAMM,WAAW,GAAG,MAAK;AAC5B,SAAO,gBAAeX,QAAf,EAAwB;AAC3B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAAS,aAAT,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,cADD;AAELC,MAAAA,OAAO,EAAGH,QAAQ,CAACI;AAFd,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AASP,OAAO,MAAMO,UAAU,GAAG,CAACC,IAAD,EAAML,KAAN,EAAYC,QAAZ,EAAqBK,WAArB,KAAoC;AAC1D,SAAO,gBAAed,QAAf,EAAwB;AAC3B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACc,IAAL,CAAU,iBAAV,EAA4B;AAACG,MAAAA,IAAD;AAAML,MAAAA,KAAN;AAAYC,MAAAA,QAAZ;AAAqBK,MAAAA;AAArB,KAA5B,CAAvB;AACAd,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,aADF;AAELC,MAAAA,OAAO,EAAGH,QAAQ,CAACI;AAFd,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AASP,OAAO,MAAMU,UAAU,GAAG,MAAK;AAC3B,SAAO,gBAAef,QAAf,EAAwB;AAC3B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAAS,aAAT,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,aADF;AAELC,MAAAA,OAAO,EAAGH,QAAQ,CAACI;AAFd,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMW,aAAa,GAAG,CAACC,SAAD,EAAWC,QAAX,EAAoBV,KAApB,EAA0BM,WAA1B,EAAsCK,OAAtC,KAAiD;AAC1E,SAAO,gBAAenB,QAAf,EAAwB;AAC3B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACc,IAAL,CAAU,oBAAV,EAA+B;AAACO,MAAAA,SAAD;AAAWC,MAAAA,QAAX;AAAoBV,MAAAA,KAApB;AAA0BM,MAAAA,WAA1B;AAAsCK,MAAAA;AAAtC,KAA/B,CAAvB;AACAnB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,gBADF;AAELC,MAAAA,OAAO,EAAGH,QAAQ,CAACI;AAFd,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMe,SAAS,GAAG,CAACC,MAAD,EAASC,SAAT,EAAoBC,UAApB,EAAgCC,UAAhC,KAA8C;AACnE,SAAO,gBAAexB,QAAf,EAAwB;AAC3B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACc,IAAL,CAAU,eAAV,EAA0B;AAACW,MAAAA,MAAD;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,UAApB;AAAgCC,MAAAA;AAAhC,KAA1B,CAAvB;AACAxB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,eADD;AAELC,MAAAA,OAAO,EAAGH,QAAQ,CAACI;AAFd,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMoB,WAAW,GAAIJ,MAAD,IAAW;AAClC,SAAO,gBAAgBrB,QAAhB,EAAyB;AAC5B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAAS,WAAT,EAAqB;AAACmB,MAAAA;AAAD,KAArB,CAAvB;AACArB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,cADF;AAELC,MAAAA,OAAO,EAAGH,QAAQ,CAACI;AAFd,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMqB,UAAU,GAAIC,OAAD,IAAY;AAClC,SAAO;AACHxB,IAAAA,IAAI,EAAG,aADJ;AAEHC,IAAAA,OAAO,EAAGuB;AAFP,GAAP;AAIH,CALM;AAMP,OAAO,MAAMC,cAAc,GAAG,CAACC,WAAD,EAAcC,WAAd,KAA6B;AACvD,SAAO,gBAAe9B,QAAf,EAAwB;AAC3B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACc,IAAL,CAAU,qBAAV,EAAgC;AAACmB,MAAAA,WAAD;AAAcC,MAAAA;AAAd,KAAhC,CAAvB;AACA9B,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,iBADF;AAELC,MAAAA,OAAO,EAAIH,QAAQ,CAACI;AAFf,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AASP,OAAO,MAAM0B,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAmB;AAC1C,SAAO,gBAAejC,QAAf,EAAwB;AAC3B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACc,IAAL,CAAU,kBAAV,EAA6B;AAACsB,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA7B,CAAvB;AACAjC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,cADF;AAELC,MAAAA,OAAO,EAAIH,QAAQ,CAACI;AAFf,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAM6B,aAAa,GAAI1B,KAAD,IAAU;AACnC,SAAO,gBAAeR,QAAf,EAAwB;AAC3B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACc,IAAL,CAAU,oBAAV,EAA+B;AAACF,MAAAA;AAAD,KAA/B,CAAvB;AACAR,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,gBADF;AAELC,MAAAA,OAAO,EAAIH,QAAQ,CAACI;AAFf,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AASP,OAAO,MAAM8B,qBAAqB,GAAG,CAACC,IAAD,EAAM3B,QAAN,EAAeD,KAAf,KAAwB;AACzD,SAAO,gBAAgBR,QAAhB,EAAyB;AAC5B,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACc,IAAL,CAAU,4BAAV,EAAuC;AAAC0B,MAAAA,IAAD;AAAM3B,MAAAA,QAAN;AAAeD,MAAAA;AAAf,KAAvC,CAAvB;AACAR,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAG,yBADF;AAELC,MAAAA,OAAO,EAAIH,QAAQ,CAACI;AAFf,KAAD,CAAR;AAIH,GAND;AAOH,CARM","sourcesContent":["import axios from 'axios';\n\nconst http = axios.create({\n    baseURL: 'https://alimente-data.herokuapp.com/'\n});\n\nexport const fetchmenu = () =>{\n    return async function(dispatch){\n        const response = await http.get('/api/menu')\n        dispatch({\n            type : 'FETCH_MENU',\n            payload : response.data\n        })\n    } \n}\n\nexport const fetchuserprofile = () =>{\n    return async function (dispatch){\n        const response = await http.get('/api/userprofile')\n        dispatch({\n            type : 'FETCH_USERPROFILE',\n            payload : response.data\n        })\n    }\n}\nexport const signinuser = (email, password) =>{\n    return async  function (dispatch){\n        const response = await http.post('/api/userlogin',{email,password})\n        dispatch({\n            type : 'USER_LOGIN',\n            payload : response.data\n        })\n    }\n}\nexport const checkisauth = () =>{\n    return async function(dispatch){\n        const response = await http.get('/api/isauth')\n        dispatch({\n            type: 'CHECK_ISAUTH',\n            payload : response.data\n        })\n    }\n}\nexport const signupuser = (name,email,password,phonenumber) =>{\n    return async function(dispatch){\n        const response = await http.post('/api/usersignup',{name,email,password,phonenumber})\n        dispatch({\n            type : 'USER_SIGNUP',\n            payload : response.data\n        })\n    }\n}\nexport const logoutuser = () =>{\n    return async function(dispatch){\n        const response = await http.get('/api/logout')\n        dispatch({\n            type : 'USER_LOGOUT',\n            payload : response.data\n        })\n    }\n}\n\nexport const contactusform = (firstname,lastname,email,phonenumber,message) =>{\n    return async function(dispatch){\n        const response = await http.post('/api/contactusform',{firstname,lastname,email,phonenumber,message})\n        dispatch({\n            type : 'CONTACTUS_FORM',\n            payload : response.data\n        })\n    }\n}\n\nexport const cartorder = (userid, useremail, fooddetail, totalprice) =>{\n    return async function(dispatch){\n        const response = await http.post('/api/usercart',{userid, useremail ,fooddetail, totalprice})\n        dispatch({\n            type: 'ORDER_CONFIRM',\n            payload : response.data\n        })\n    }\n}\n\nexport const fetchorders = (userid) =>{\n    return async function (dispatch){\n        const response = await http.get('/api/cart',{userid})\n        dispatch({\n            type : 'FETCH_ORDERS',\n            payload : response.data\n        })   \n    }\n}\n\nexport const picclicked = (picname) =>{\n    return {\n        type : 'PIC_CLICKED',\n        payload : picname\n    }\n}\nexport const changepassword = (oldpassword, newpassword) =>{\n    return async function(dispatch){\n        const response = await http.post('/api/changepassword',{oldpassword, newpassword})\n        dispatch({\n            type : 'CHANGE_PASSWORD',\n            payload  : response.data\n        })\n    }\n}\nexport const editdetails = (phone, address) =>{\n    return async function(dispatch){\n        const response = await http.post('/api/editdetails',{phone, address})\n        dispatch({\n            type : 'EDIT_DETAILS',\n            payload  : response.data\n        })\n    }\n}\n\nexport const resetpassword = (email) =>{\n    return async function(dispatch){\n        const response = await http.post('/api/resetpassword',{email})\n        dispatch({\n            type : 'RESET_PASSWORD',\n            payload  : response.data\n        })\n    }\n}\nexport const resetpasswordwithcode = (code,password,email) =>{\n    return async function (dispatch){\n        const response = await http.post('/api/resetpasswordwithcode',{code,password,email})\n        dispatch({\n            type : 'RESET_PASSWORD_WITHCODE',\n            payload  : response.data\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}